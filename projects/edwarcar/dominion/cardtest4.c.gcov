        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdlib.h>
        -:    2:#include <stdio.h>
        -:    3:#include "dominion.h"
        -:    4:#include "dominion_helpers.h"
        -:    5:#include "rngs.h"
        -:    6:
        -:    7://testing the Embargo card
        -:    8:
function main called 1 returned 100% blocks executed 89%
        1:    9:int main(int argc, char** argv) {
        -:   10:
        1:   11:printf("/*********************** Testing Embargo Card **************************/\n");
call    0 returned 100%
        -:   12:
        -:   13://declare variables
        -:   14:struct gameState game;
        1:   15:int seed = rand() % 10;
call    0 returned 100%
        1:   16:int players = 2;
        1:   17:int choice1 = 0;
        1:   18:int choice2 = 0;
        1:   19:int choice3 = 0;
        1:   20:int handPosition = 4; 
        1:   21:int k[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        1:   22:int bonus = 0; 
        -:   23:
        -:   24://initialize game
        -:   25:
        1:   26:initializeGame(players, k, seed, &game);
call    0 returned 100%
        -:   27:
        -:   28://grab numbers before calling the card
        1:   29:int handCount1 = numHandCards(&game);
call    0 returned 100%
        1:   30:int coinSupply1 = game.coins;
        -:   31:
        1:   32:int embargotoken1 = game.embargoTokens;
        -:   33:
        1:   34:if(cardEffect(adventurer, choice1, choice2, choice3, &game, handPosition, bonus) == 0){
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        -:   35:
        1:   36:int handCount2 = numHandCards(&game);
call    0 returned 100%
        1:   37:int coinSupply2 = game.coins;
        1:   38:int embargotoken2 = game.embargoTokens;
        -:   39:
        1:   40:if(handCount2 != (handCount1  - 1)){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   41:	
        1:   42:	printf("EMBARGO CARD TEST HAS FAILED\n");
call    0 returned 100%
        -:   43:}
        1:   44:if(coinSupply2 != (coinSupply1 + 2)){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   45:	printf("EMBARGO CARD TEST HAS FAILED\n");
call    0 returned 100%
        -:   46:}
        -:   47:
        1:   48:if(embargotoken2 != (embargotoken1 + 1)){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   49:	printf("EMBARGO CARD TEST HAS FAILED\n");
call    0 returned 100%
        -:   50:}
        -:   51:else
        -:   52:{
    #####:   53:	printf("EMBARGO CARD TEST HAS PASSED\n"); 
call    0 never executed
        -:   54:}
        -:   55:}
        -:   56:else {
    #####:   57:	printf("EMBARGO CARD TEST HAS FAILED\n");
call    0 never executed
        -:   58:}
        -:   59:
        1:   60:return 0;
        -:   61:
        -:   62:}
        -:   63:
